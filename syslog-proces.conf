input {
  pipeline {
    address => "syslog-process"
  }
}

filter {

  if [observer][ip] in [ "10.30.3.1", "" ] {
    mutate {
      add_field => { "[@metadata][whitelisted]" => "true" }
    }
  }

  if [@metadata][whitelisted] != "true" {
    drop{}
  }

  if [message] =~ /.*url=.*/ {
    grok {
      match => { "message" => "%{GREEDYDATA} url=.%{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST:[@metadata][urlhost]})?(?:%{URIPATHPARAM})?.* %{GREEDYDATA}"}
    }

    translate {
        exact => true
        regex => true
        override => true
        field => "[@metadata][urlhost]"
        destination => "[@metadata][drop]"
        dictionary_path => "/etc/logstash/utils/urls_to_filter.csv"
        refresh_behaviour => "replace"
    }

    if [@metadata][drop] == "y" {
      drop {}
    }

  }
}

output {
    kafka {
      bootstrap_servers => "soc-nlape1vp-lisv-144.idm.gsd.sec:9093,soc-nlape1vp-lisv-143.idm.gsd.sec:9093,soc-nlape1vp-lisv-145.idm.gsd.sec:9093,soc-nlape1vp-lisv-146.idm.gsd.sec:9093"

      codec => json
      id => "sed_kafka_output_syslog"
      topic_id => "%{[organization][id]}"
      compression_type => "lz4"
      acks => "all"
      linger_ms => 30

      security_protocol => "SSL"

      ssl_keystore_location => "/etc/logstash/ssl/keystore_sed.jks"
      ssl_keystore_password => "iamdummypassword"
      ssl_keystore_type => "JKS"

      ssl_truststore_location => "/etc/logstash/ssl/truststore_kafka.jks"
      ssl_truststore_password => "iamdummypassword"
      ssl_truststore_type => "JKS"
  }
}